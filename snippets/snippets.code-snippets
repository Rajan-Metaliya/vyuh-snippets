{
  "To Generate Singleton mock": {
    "prefix": "getRegSing",
    "body": ["  getIt.registerSingleton<$1>(Mock$1());", ""],
    "description": "To Generate Singleton mock"
  },
  "For static const string": {
    "prefix": "scstr",
    "body": ["static const String $1 = \"$2\";"],
    "description": "To Generate Singleton mock"
  },
  "Vyuh Sectuib": {
    "prefix": "vyuhSection",
    "body": [
      "import 'package:flutter/material.dart';",
      "import 'package:json_annotation/json_annotation.dart';",
      "import 'package:vyuh_core/plugin/content/content_item.dart';",
      "import 'package:vyuh_core/plugin/content/type_descriptor.dart';",
      "import 'package:vyuh_extension_content/content/content_builder.dart';",
      "",
      "part '${TM_FILENAME_BASE}.g.dart';",
      "",
      "@JsonSerializable()",
      "final class $1Section extends ContentItem {",
      "  static const schemaName = 'feature.$1.section';",
      "",
      "  static final typeDescriptor = TypeDescriptor(",
      "    schemaType: schemaName,",
      "    title: '$1 Section',",
      "    fromJson: $1Section.fromJson,",
      "  );",
      "",
      "  final String? title;",
      "",
      "  $1Section({",
      "    this.title,",
      "  }) : super(schemaType: schemaName);",
      "",
      "  factory $1Section.fromJson(Map<String, dynamic> json) =>",
      "      _$$1SectionFromJson(json);",
      "}",
      "",
      "final class $1SectionBuilder extends ContentBuilder {",
      "  $1SectionBuilder()",
      "      : super(",
      "          content: $1Section.typeDescriptor,",
      "          defaultLayout: $1SectionLayout(),",
      "          defaultLayoutDescriptor: $1SectionLayout.typeDescriptor,",
      "        );",
      "}",
      "",
      "@JsonSerializable()",
      "final class $1SectionLayout",
      "    extends LayoutConfiguration<$1Section> {",
      "  static const schemaName = '${$1Section.schemaName}.layout';",
      "",
      "  static final typeDescriptor = TypeDescriptor(",
      "    schemaType: schemaName,",
      "    title: '$1 Section Layout',",
      "    fromJson: $1SectionLayout.fromJson,",
      "  );",
      "",
      "  $1SectionLayout() : super(schemaType: schemaName);",
      "",
      "  factory $1SectionLayout.fromJson(Map<String, dynamic> json) =>",
      "      _$$1SectionLayoutFromJson(json);",
      "",
      "  @override",
      "  Widget build(BuildContext context, $1Section content) {",
      "    return const Text(\"$1 Section\");",
      "  }",
      "}",
      ""
    ],
    "description": "Vyuh Sectuib"
  },
  "Vyuh Api Builder": {
    "prefix": "vyuhApiBuilder",
    "body": [
      "import 'package:flutter/material.dart';",
      "import 'package:json_annotation/json_annotation.dart';",
      "import 'package:vyuh_core/vyuh_core.dart';",
      "import 'package:vyuh_feature_system/content/api_content.dart';",
      "",
      "part '${TM_FILENAME_BASE}.g.dart';",
      "",
      "@JsonSerializable()",
      "final class $1ApiConfig extends ApiConfiguration<$2> {",
      "  static const schemaName = 'feature.$1.configsSection';",
      "",
      "",
      "",
      "  static final typeDescriptor = TypeDescriptor(",
      "    schemaType: schemaName,",
      "    title: 'Feature API Configuration ($1)',",
      "    fromJson: $1ApiConfig.fromJson,",
      "  );",
      "",
      "  $1ApiConfig() : super(schemaType: schemaName);",
      "",
      "  factory $1ApiConfig.fromJson(Map<String, dynamic> json) =>",
      "      _$$1ApiConfigFromJson(json);",
      "",
      "  @override",
      "  Widget build(BuildContext context, $2? data) {",
      "    ",
      "    return const Text('$1 API Config');",
      "  }",
      "",
      "  @override",
      "  Future<$2?> invoke(BuildContext context) async {",
      "    return null;",
      "  ",
      "    // Invoke the API ",
      "  }",
      "}",
      ""
    ],
    "description": "Vyuh Api Builder"
  },

  "Feature Descriptor": {
    "prefix": "vyuhFeature",
    "body": [
      "import 'package:flutter/material.dart';",
      "import 'package:go_router/go_router.dart';",
      "import 'package:vyuh_core/vyuh_core.dart';",
      "",
      "final feature = FeatureDescriptor(",
      "  name: '${1:featureName}',",
      "  title: '${2:Feature Title}',",
      "  routes: () async {",
      "  },",
      "extensions : [",
      "],",
      ");",
      ""
    ],
    "description": "Create a new Vyuh Feature Descriptor"
  },

  "Plugin Setup": {
    "prefix": "vyuhPlugin",
    "body": [
      "import 'package:conference_app/firebase_options.dart';",
      "import 'package:firebase_core/firebase_core.dart';",
      "import 'package:flutter/material.dart';",
      "import 'package:sanity_client/client.dart';",
      "import 'package:vyuh_core/plugin/plugin_descriptor.dart';",
      "import 'package:vyuh_core/vyuh_core.dart' as vc;",
      "import 'package:vyuh_extension_content/plugin/content_plugin.dart';",
      "import 'package:vyuh_feature_developer/vyuh_feature_developer.dart' as developer;",
      "import 'package:vyuh_feature_system/vyuh_feature_system.dart' as system;",
      "import 'package:vyuh_plugin_auth_firebase/vyuh_plugin_auth_firebase.dart';",
      "import 'package:vyuh_plugin_content_provider_sanity/vyuh_plugin_content_provider_sanity.dart';",
      "",
      "void main() async {",
      "  final plugins = await _getPlugins();",
      "",
      "  vc.runApp(",
      "    initialLocation: '/${1:INPUT_1}',",
      "    features: () => [",
      "      system.feature,",
      "      developer.feature,",
      "    ],",
      "    plugins: plugins,",
      "  );",
      "}",
      "",
      "Future<PluginDescriptor> _getPlugins() async {",
      "  WidgetsFlutterBinding.ensureInitialized();",
      "",
      "  await Firebase.initializeApp(options: DefaultFirebaseOptions.currentPlatform);",
      "",
      "  final contentProvider = SanityContentProvider.withConfig(",
      "    config: SanityConfig(",
      "      projectId: '${2:PROJECT_ID}',",
      "      dataset: '${3:DATASET}',",
      "      perspective: Perspective.previewDrafts,",
      "      useCdn: false,",
      "      token: '${4:TOKEN}',",
      "    ),",
      "    cacheDuration: const Duration(seconds: 5),",
      "  );",
      "",
      "  return PluginDescriptor(",
      "    content: DefaultContentPlugin(provider: contentProvider),",
      "    auth: FirebaseAuthPlugin(),",
      "  );",
      "}"
    ],
    "description": "Set up a new Vyuh Plugin"
  },

  "Content Item Definition": {
    "prefix": "vyuhContentItem",
    "body": [
      "import 'package:flutter/material.dart';",
      "import 'package:json_annotation/json_annotation.dart';",
      "import 'package:vyuh_core/vyuh_core.dart';",
      "",
      "part '${TM_FILENAME_BASE}.g.dart';",
      "",
      "@JsonSerializable()",
      "final class ${1:ContentItemName} extends ContentItem {",
      "  static const schemaName = '${2:schemaName}';",
      "  static final typeDescriptor = TypeDescriptor(",
      "    schemaType: schemaName,",
      "    title: '${3:Content Item Title}',",
      "    fromJson: ${1:ContentItemName}.fromJson,",
      "  );",
      "",
      "  ${1:ContentItemName}({",
      "    required this.${4:propertyName},",
      "  }) : super(schemaType: schemaName);",
      "",
      "  factory ${1:ContentItemName}.fromJson(Map<String, dynamic> json) =>",
      "      _$${1:ContentItemName}FromJson(json);",
      "",
      "  final ${5:propertyType} ${4:propertyName};",
      "}"
    ],
    "description": "Define a new Vyuh Content Item"
  },

  "Layout Configuration": {
    "prefix": "vyuhLayoutConfig",
    "body": [
      "import 'package:flutter/material.dart';",
      "import 'package:json_annotation/json_annotation.dart';",
      "import 'package:vyuh_core/vyuh_core.dart';",
      "",
      "part '${TM_FILENAME_BASE}.g.dart';",
      "",
      "@JsonSerializable()",
      "final class ${1:LayoutConfigName} extends LayoutConfiguration<${2:ContentItemName}> {",
      "  static const schemaName = '${3:schemaName}.layout.${4:layoutName}';",
      "  static final typeDescriptor = TypeDescriptor(",
      "    schemaType: schemaName,",
      "    title: '${1} Layout',",
      "    fromJson: ${1:LayoutConfigName}.fromJson,",
      "  );",
      "",
      "  ${1:LayoutConfigName}() : super(schemaType: schemaName);",
      "",
      "  factory ${1:LayoutConfigName}.fromJson(Map<String, dynamic> json) =>",
      "      _$${1:LayoutConfigName}FromJson(json);",
      "",
      "  @override",
      "  Widget build(BuildContext context, ${2:ContentItemName} content) {",
      "    return Container();",
      "  }",
      "}",
      ""
    ],
    "description": "Create a layout configuration for a Vyuh Content Item"
  },
  "Vyuh Action Config": {
    "prefix": "vyuhActionConfig",
    "body": [
      "import 'dart:async';",
      "",
      "import 'package:flutter/material.dart';",
      "import 'package:json_annotation/json_annotation.dart';",
      "import 'package:vyuh_core/vyuh_core.dart';",
      "import 'package:vyuh_extension_content/vyuh_extension_content.dart';",
      "",
      "part '${TM_FILENAME_BASE}.g.dart';",
      "",
      "@JsonSerializable()",
      "final class ${1:Action}Action extends ActionConfiguration {",
      "  static const schemaName = '${2:Feature}.action.${3: Action Name}';",
      "",
      "  static final typeDescriptor = TypeDescriptor(",
      "    schemaType: schemaName,",
      "    fromJson: ${1:NewsBookmarkAction}Action.fromJson,",
      "    title: '${1:NewsBookmarkAction} Action',",
      "  );",
      "",
      "  ${1:NewsBookmarkAction}Action() : super(schemaType: schemaName);",
      "",
      "  factory ${1:NewsBookmarkAction}Action.fromJson(Map<String, dynamic> json) =>",
      "      _$${1:NewsBookmarkAction}ActionFromJson(json);",
      "",
      "  @override",
      "  FutureOr<void> execute(",
      "    BuildContext context, {",
      "    Map<String, dynamic>? arguments,",
      "  }) {",
      "  }",
      "}"
    ],
    "description": "Create a new Vyuh Action Configuration for News Bookmark"
  },
  "Vyuh DI Register": {
    "prefix": "vyuhdi",
    "body": ["vyuh.di.register(${1:ClassName}());"],
    "description": "Register a class with Vyuh dependency injection",
  },
}
